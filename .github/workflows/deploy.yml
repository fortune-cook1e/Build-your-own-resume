name: NestJs Deploy to Aliyun ECS

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      DOCKER_SERVER_IMAGE: ${{secrets.DOCKER_SERVER_IMAGE}}
      REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      DOCKER_SERVER_COMPOSE_PATH: ${{secrets.DOCKER_SERVER_COMPOSE_PATH}}

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@646cdf48217256a3d0b80361c5a50727664284f2
        with:
          version: 8.11.0
          run_install: false

      - name: Install dependencies and build
        run: pnpm install && pnpm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_USER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_SERVER_IMAGE}}:latest

      - name: Deploy to Aliyun ECS
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_SERVER_IMAGE: ${{ secrets.DOCKER_SERVER_IMAGE }}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          password: ${{ secrets.ECS_PASSWORD }}
          envs: DOCKER_USERNAME,DOCKER_SERVER_IMAGE,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,REDIS_PASSWORD
          script: |
            cd ${{secrets.DOCKER_SERVER_COMPOSE_PATH}}
            docker-compose pull
            docker-compose -f server.compose.yml up -d
