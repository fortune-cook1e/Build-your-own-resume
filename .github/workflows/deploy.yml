name: Deploy to Aliyun ECS

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      DOCKER_USER_PASSWORD: ${{secrets.DOCKER_USER_PASSWORD}}
      DOCKER_IMAGE: ${{secrets.DOCKER_IMAGE}}
      DOCKER_COMPOSE_PATH: ${{secrets.DOCKER_COMPOSE_PATH}}

      REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      REDIS_NAMESPACE: ${{secrets.REDIS_NAMESPACE}}

      DATABASE_URL: ${{ secrets.DATABASE_URL }}

      ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
      REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}

      ECS_HOST: ${{ secrets.ECS_HOST }}
      ECS_USERNAME: ${{ secrets.ECS_USERNAME }}
      ECS_PASSWORD: ${{ secrets.ECS_PASSWORD }}

      MAIL_FROM: ${{ secrets.MAIL_FROM }}
      SMTP_URL: ${{secrets.SMTP_URL}}

      QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
      QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
      QINIU_BUCKET: ${{ secrets.QINIU_BUCKET }}
      QINIU_DOMAIN: ${{ secrets.QINIU_DOMAIN }}
      QINIU_ZONE: ${{secrets.QINIU_ZONE}}

      WEB_APP_URL: ${{ secrets.WEB_APP_URL }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@646cdf48217256a3d0b80361c5a50727664284f2
        with:
          version: 8.11.0
          run_install: false

      - name: Install dependencies and build
        run: pnpm install && pnpm run prisma:generate && pnpm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_USER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:latest

      - name: Deploy to Aliyun ECS
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}

          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}

          REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          REDIS_NAMESPACE: ${{secrets.REDIS_NAMESPACE}}

          DATABASE_URL: ${{ secrets.DATABASE_URL }}

          ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
          REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}

          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          SMTP_URL: ${{secrets.SMTP_URL}}

          QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
          QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
          QINIU_BUCKET: ${{ secrets.QINIU_BUCKET }}
          QINIU_DOMAIN: ${{ secrets.QINIU_DOMAIN }}
          QINIU_ZONE: ${{secrets.QINIU_ZONE}}

          WEB_APP_URL: ${{ secrets.WEB_APP_URL }}

        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          password: ${{ secrets.ECS_PASSWORD }}
          envs: DOCKER_USERNAME,DOCKER_IMAGE,DATABASE_URL,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,REDIS_PASSWORD,REDIS_URL,REDIS_NAMESPACE,ACCESS_TOKEN_SECRET,REFRESH_TOKEN_SECRET,MAIL_FROM,SMTP_URL,QINIU_ACCESS_KEY,QINIU_SECRET_KEY,QINIU_BUCKET,QINIU_DOMAIN,QINIU_ZONE,WEB_APP_URL
          script: |
            cd ${{secrets.DOCKER_COMPOSE_PATH}}
            docker-compose pull
            docker-compose -f server-compose.yml up -d
